import discord
from discord.ext import commands, tasks
import aiohttp
import datetime

TOKEN = "YOUR_DISCORD_BOT_TOKEN"
GAME_ID = "101186958060381"
CHANNEL_ID = 123456789012345678  # replace with your log channel ID

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)

last_player_count = None
last_updated_time = None

@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}")
    check_game_status.start()

@tasks.loop(seconds=30)
async def check_game_status():
    global last_player_count, last_updated_time
    async with aiohttp.ClientSession() as session:
        url = f"https://games.roblox.com/v1/games?universeIds={GAME_ID}"
        async with session.get(url) as resp:
            data = await resp.json()
            if "data" not in data or not data["data"]:
                return
            
            game = data["data"][0]
            playing = game["playing"]
            updated_time = game["updated"]
            name = game["name"]

            channel = bot.get_channel(CHANNEL_ID)
            if not channel:
                return

            # Check game update
            if last_updated_time and last_updated_time != updated_time:
                await channel.send(f"[UPDATE] The game **'{name}'** was updated!\nNew Update Date: `{updated_time}`")
            last_updated_time = updated_time

            # Check player count
            if last_player_count is None:
                last_player_count = playing
                return

            if playing != last_player_count:
                time_now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                diff = playing - last_player_count

                if diff > 0:
                    await channel.send(f"[JOIN] A new player joined the server.\n[INFO] Game Active: {playing} player(s) | {time_now}")
                elif diff < 0:
                    await channel.send(f"[LEAVE] A player left the server.\n[INFO] Game Active: {playing} player(s) | {time_now}")
                
                last_player_count = playing

bot.run(TOKEN)
